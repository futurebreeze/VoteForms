// Generated by CoffeeScript 1.9.2
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    slice = [].slice;

  (function($, window) {
    var VoteForm;
    VoteForm = (function() {
      VoteForm.prototype.defaults = {
        selectors: {
          container: '.vtf',
          submit: '.vtf-submit',
          raty: '.raty',
          iconDone: '.icon-done',
          alert: {
            conteiner: '.vtf-alert',
            message: '.vtf-message',
            close: '.close'
          }
        }
      };

      function VoteForm(el, options) {
        this._showFail = bind(this._showFail, this);
        this._showDone = bind(this._showDone, this);
        this._sendRecors = bind(this._sendRecors, this);
        this.options = $.extend({}, this.defaults, options);
        this.selectors = this.options.selectors;
        this.$el = $(el);
        this.$ratys = this.$el.find(this.selectors.raty);
        this.$submit = this.$el.find(this.selectors.submit);
        this.ratingMax = this.$el.data('ratingMax');
        this.data = {
          action: 'record/record_multiple',
          form: this.$el.data('form'),
          thread: this.$el.data('thread'),
          fields: [],
          fields: jQuery.makeArray(this.$ratys.map(function() {
            var id, score;
            score = +$(this).data('score');
            id = +$(this).data('id');
            if (score && id) {
              return {
                id: id,
                value: score
              };
            }
          }))
        };
      }

      VoteForm.prototype.init = function() {
        if (!jQuery().raty) {
          document.write('<script src="' + this.options.vendorUrl + 'raty/lib/jquery.raty.js"></script>');
        }
        this._listeners();
        return this._ready();
      };

      VoteForm.prototype._listeners = function() {
        $(document).on('submit', this.selectors.container, function(e) {
          e.preventDefault();
          return false;
        });
        this.$el.on('click', this.selectors.alert.close, (function(_this) {
          return function() {
            return _this.$el.find(_this.selectors.alert.conteiner).hide();
          };
        })(this));
        this.$el.on('click', this.selectors.raty, (function(_this) {
          return function(e) {
            var $this;
            if (!_this.$submit.length) {
              $this = $(e.currentTarget);
              _this._sendRecors([
                {
                  id: $this.data('id'),
                  value: $this.raty('score')
                }
              ], e.currentTarget);
            }

            /*validation submit */
            if (_this.data.fields.length === _this.$ratys.length) {
              return _this.$submit.removeAttr('disabled');
            }
          };
        })(this));
        return this.$el.on('click', this.selectors.submit, (function(_this) {
          return function(e) {
            _this._sendRecors(jQuery.makeArray(_this.$ratys.map(function() {
              var id, score;
              score = +$(this).raty('score');
              id = +$(this).data('id');
              if (score && id) {
                return {
                  id: id,
                  value: score
                };
              }
            })), e.currentTarget);
          };
        })(this));
      };

      VoteForm.prototype._ready = function() {
        return $(document).ready((function(_this) {
          return function() {
            return _this.$ratys.raty({
              starType: 'i',
              number: _this.ratingMax,
              score: function() {
                return $(this).attr('data-score');
              }
            });
          };
        })(this));
      };

      VoteForm.prototype._sendRecors = function(fields, currentTarget) {
        this.$el.find(this.selectors.alert.conteiner).hide();
        this.$el.find(this.selectors.alert.message).html('');
        this.currentTarget = currentTarget;
        $.ajax({
          url: this.options.actionUrl,
          type: 'post',
          dataType: 'json',
          data: $.extend(this.data, {
            fields: fields
          })
        }).done(this._showDone).fail(this._showFail);
      };

      VoteForm.prototype._showDone = function(data) {
        var $iconDone;
        $iconDone = $(this.currentTarget).parent().find(this.selectors.iconDone);
        $iconDone.show((function(_this) {
          return function() {
            return setTimeout(function() {
              return $iconDone.hide();
            }, 500);
          };
        })(this));
      };

      VoteForm.prototype._showFail = function(err) {
        var message, ref, ref1, ref2;
        message = ((ref = err.responseJSON) != null ? ref.message : void 0) ? ((ref1 = err.responseJSON) != null ? ref1.message : void 0) + '<br>' : '';
        if ((ref2 = err.responseJSON) != null ? ref2.errors : void 0) {
          jQuery.each(err.responseJSON.errors, function() {
            return message = message + this.msg + '<br>';
          });
        }
        if (!message) {
          message = err.responseText;
        }
        if (!message) {
          message = 'неизвестная ошибка';
        }
        this.$el.find(this.selectors.alert.message).html(message);
        return this.$el.find(this.selectors.alert.conteiner).show();
      };

      return VoteForm;

    })();
    return $.fn.extend({
      voteForm: function() {
        var args, option;
        option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
        return this.each(function() {
          var $this, data;
          $this = $(this);
          data = $this.data('VoteForm');
          if (!data) {
            $this.data('VoteForm', (data = new VoteForm(this, option)));
            data.init();
          }
          if (typeof option === 'string') {
            return data[option].apply(data, args);
          }
        });
      }
    });
  })(window.jQuery, window);

  $('.vtf').voteForm(VoteFormsConfig);

}).call(this);

//# sourceMappingURL=voteforms.js.map
